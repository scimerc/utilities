#!/usr/bin/env Rscript
library( conf.design )

n <- 4
mode <- "presentation"
yunpeng.colors <- c( "#DD1E2F", "#EBB035", "#06A2CB" )
gwas_neglog10_P <- -log10( 5.E-8 )
opt.vector <- vector()
myArgs <- commandArgs( TRUE )
if ( length( myArgs ) > 0 ) {
	myArgs.index.vector <- 1 : length( myArgs )
    index.vector <- myArgs.index.vector[ myArgs == "-n" ]
    if ( length( index.vector ) > 0 ) {
        n <- as.numeric( myArgs[ index.vector[ length( index.vector ) ] + 1 ] )
        opt.vector <- c(
            opt.vector,
            index.vector,
            index.vector + 1
        )
    }
	mycolors <- rainbow( n )
	mycolors[ 1:3 ] <- yunpeng.colors
	mycolors[ n ] <- "gray"
    if ( length( opt.vector ) == 0 ) data.files <- myArgs
    else data.files <- myArgs[ -opt.vector ]
    if ( length( data.files ) > 0 ) {
		trim.data.files <- sub( ".+[.]RData_", "", data.files )
		Nq <- factorize( round( length( data.files ) / n ) )
		if ( mode == "presentation" ) {
			plotrows <- prod( Nq[ 1 : round( length( Nq ) / 2 ) ] )
			plotcols <- prod( Nq[ ( round( length( Nq ) / 2 ) + 1 ) : length( Nq ) ] )
		} else {
			plotcols <- prod( Nq[ 1 : round( length( Nq ) / 2 ) ] )
			plotrows <- prod( Nq[ ( round( length( Nq ) / 2 ) + 1 ) : length( Nq ) ] )
		}
# 		plotcols <- length( data.files ) / n
# 		plotrows <- 1
		Nquadri <- plotrows * plotcols
		mylwd <- max( ( plotcols - 1 ) * ( plotrows - 1 ), 4 )
		cat( "figure layout:", plotrows, plotcols, "\n" )
		pdf( "figure.pdf", width = 7 * plotcols, height = 7 * plotrows + 1 )
		layoutmat <- cbind(
			matrix(
				c( 1 : Nquadri ),
				nrow = plotrows,
				ncol = plotcols,
				byrow = T
			),
			rep( Nquadri + 1, plotrows )
		)
		layout(
			layoutmat,
			widths = c( rep( 0.85 / plotcols, plotcols ), 0.15 )
		)
		par(
			cex = max( plotcols / 2 + 0.1, 1 ),
			mar = c( 1, 2, 2, 1 ),
			oma = c( 5, 5, 0, 0 ),
			mgp = c( 3.5, 1, 0 )
		)
		quadro <- 1
		for ( data.file in data.files ) {
			read.table( data.file, header=T ) -> mydata
			mylegend <- c( "All", t( data.frame( strsplit( trim.data.files[ ( quadro - 1 ) * n + ( 1 : n ) ], "_" ) ) )[, 3 ], "Null" )
			mylegend[ mylegend == "3UTR-nonmiRNA" ] <- "3UTR#"
			mylegend[ mylegend == "3UTR-nonmiRNABS" ] <- "3UTR*"
			mylegend[ mylegend == "3UTR-nonmiRNABSLD" ] <- "3UTR*"
			mylegend[ mylegend == "heterozygosity" ] <- "het"
			mylegend[ mylegend == "H3K4me3" ] <- "hist"
			mylegend[ mylegend == "expression" ] <- "expr"
			mylegend[ mylegend == "hypomethylation" ] <- "methyl"
			series <- which( data.files == data.file ) %% n
			if ( series == 0 ) series <- n
			if ( series == 1 || n == 1 ) {
				neglog10_P_all <- sort( -log10( mydata$All ) )
				neglog10_P_all_exp <- sort( -log10( ( 1 : length( neglog10_P_all ) ) / length( neglog10_P_all ) ) )
				myfilter <- ( neglog10_P_all > 1 ) | ( runif( length( neglog10_P_all ) ) < 1000 / length( neglog10_P_all ) )
				neglog10_P_all <- neglog10_P_all[ myfilter ]
				neglog10_P_all_exp <- neglog10_P_all_exp[ myfilter ]
				plot(
					neglog10_P_all_exp,
					neglog10_P_all,
					ylim = c( 0, ceiling( gwas_neglog10_P ) ),
					type = "l",
					col = "black",
					axes = 0,
					ylab = "",
					xlab = "",
					lwd = mylwd
				)
				if( quadro %% plotcols == 1 || plotrows == 1 ) {
					cex.org <- par( "cex" )
					par( cex = cex.org * 2, mgp = c( 3.5, 1, 0 ) )
					title( ylab = "Observed -log10(p)", outer = T )
					par( cex = cex.org * 1.5, mgp = c( 3.8, 1.5, 0 ) )
					axis( 2, outer = T )
					par( cex = cex.org )
				}
				if( quadro > ( plotrows - 1 ) * plotcols ) {
					cex.org <- par( "cex" )
					par( cex = cex.org * 2, mgp = c( 3.8, 1.5, 0 ) )
					title( xlab = "Expected -log10(p)", outer = T, adj = ( 1 - 0.15 ) / 2 )
					par( cex = cex.org * 1.5, mgp = c( 3.8, 1.5, 0 ) )
					axis( 1, outer = T )
					par( cex = cex.org )
				}
			}
			plotdata <- mydata$quantile_2
			neglog10_P <- sort( -log10( plotdata[ !is.na( plotdata ) ] ) )
			neglog10_P_exp <- sort( -log10( ( 1 : length( neglog10_P ) ) / length( neglog10_P ) ) )
			myfilter <- ( neglog10_P > 1 ) | ( runif( length( neglog10_P ) ) < 1000 / length( neglog10_P ) )
			neglog10_P <- neglog10_P[ myfilter ]
			neglog10_P_exp <- neglog10_P_exp[ myfilter ]
			lines(
				neglog10_P_exp,
				neglog10_P,
				col = mycolors[ series ],
				lwd = mylwd
			)
			if ( series == n ) {
				abline( h=0, lty=3, col = "gray" )
				abline( v=0, lty=3, col = "gray" )
				abline( a=0, b=1, col="black", lwd=max( mylwd - 1, 1 ), lty=3 )
# 				abline( a=gwas_neglog10_P, b=0, col="red", lwd=2, lty=2 )
				mtext( t( data.frame( strsplit( trim.data.files[ ( quadro - 1 ) * n + ( 1 : n ) ], "_" ) ) )[ 1, 2 ], at = 0, cex = 2 )
				quadro <- quadro + 1
			}
		}
		plot.new()
		par(
			mar = c( 0, 0, 0, 0 ),
			oma = c( 0, 0, 0, 0 )
		)
		legend(
			"left",
			legend = mylegend,
			col = c( "black", mycolors[ 1 : n ], "black" ),
			lty = c( rep( 1, length( mylegend ) - 1 ), 3 ),
			lwd = c( rep( mylwd, length( mylegend ) - 1 ), max( mylwd - 1, 1 ) ),
			bty = "n"
		)
		dev.off()
	}
}
